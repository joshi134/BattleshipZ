import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;

/**
  *
  * Beschreibung
  *
  * @version 1.0 vom 25.10.2017
  * @author 
  */

public class Spieler extends JFrame {
  // Anfang Attribute
  private JLabel nameFeld = new JLabel();
  private JTextField name = new JTextField();
  private Feld[][] spielfeld = new Feld[11][11];
  private JButton wieter = new JButton();
  private Schiffeversenken menu ;
  private int anzahlSchiffe=5;
  private Schiff[] schiffe = new Schiff[anzahlSchiffe];
  private SteuerungSpieler strgSP;
  private String titel;
  private JButton zeig = new JButton();
  // Ende Attribute
  
  public Spieler(String title, Schiffeversenken m) { 
    // Frame-Initialisierung
    super(title); 
    titel=title;
    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    int frameWidth = 307; 
    int frameHeight = 308;
    setSize(frameWidth, frameHeight);
    Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (d.width - getSize().width) / 2;
    int y = (d.height - getSize().height) / 2;
    setLocation(x, y);
    setResizable(false);
    Container cp = getContentPane();
    cp.setLayout(null);
    // Anfang Komponenten
    
    nameFeld.setBounds(8, 10, 43, 19);
    nameFeld.setText("Name:");
    cp.add(nameFeld);
    name.setBounds(48, 8, 97, 25);
    cp.add(name);
    wieter.setBounds(240, 256, 57, 17);
    wieter.setText("Weiter");
    wieter.setMargin(new Insets(2, 2, 2, 2));
    wieter.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        wieter_ActionPerformed(evt);
      }
    });
    cp.add(wieter);
      public void actionPerformed(ActionEvent evt) { 
      }
    });
    zeig.setBounds(24, 256, 129, 17);
    zeig.setText("Verdecken/Zeigen");
    zeig.setMargin(new Insets(2, 2, 2, 2));
    zeig.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        zeig_ActionPerformed(evt);
      }
    });
    cp.add(zeig);
    
    this.wieter.setVisible(false);
    // Ende Komponenten
    
    menu = m;
    strgSP= new SteuerungSpieler(this);
    this.addFelder(cp,title);
    //this.setFelder(cp);
  } // end of public Spieler
  
  // Anfang Methoden
  public void zeigen(boolean b){
    setVisible(b);
  }
  
  public void addFelder(Container cp, String titel){        // erstellt alle felder 
    int yK=48;
    int zahl =1;
    char text='a';
    for (int i=0;i<11 ;i++ ) {  //I=Y
      int xK=20;
      for (int k=0;k<11 ;k++ ) {    // K=x
        if (k==0 && i==0) {
          this.spielfeld[i][k] = new Feld("/",xK,yK,25,17,k,i,this.strgSP,titel);
        } else {
          if (i==0 && k>0 ) {
            this.spielfeld[i][k] = new Feld(""+zahl,xK,yK,25,17,k,i,this.strgSP,titel);
            zahl++;
          } else {
            this.spielfeld[i][k] = new Feld("",xK,yK,25,17,k,i,this.strgSP,titel);
          } // end of if-else
          if (k==0 && i>0) {
            this.spielfeld[i][k] = new Feld(""+text,xK,yK,25,17,k,i,this.strgSP,titel);
            text++;
          } 
        } // end of if-else
        xK=xK+25;
        cp.add(spielfeld[i][k].getButton());
      } // end of for
      yK=yK+17;
    } // end of for
  }  
  
  public void wieter_ActionPerformed(ActionEvent evt) {
    this.menu.welchsleSpieler();
    this.strgSP.go();
  } // end of wieter_ActionPerformed
  
  public void setDaten(DatenSchiffeversenken da){
    this.strgSP.setDaten(da);
  }
  
  public void setFarbeWeis(int i,int k){
    this.spielfeld[i][k].setWhite();
  }
  
  public void zeig_ActionPerformed(ActionEvent evt) {         // macht alle Schiffe eines Spieler unkenntlich 
    this.wieter.setVisible(true);
    this.zeig.setVisible(false);
    this.strgSP.zeige(this.titel);
    this.menu.welchsleSpieler();
    this.strgSP.go();
  } // end of zeig_ActionPerformed
  
  // Ende Methoden
} // end of class Spieler
